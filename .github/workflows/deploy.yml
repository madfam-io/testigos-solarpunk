name: Deploy to GitHub Pages - MADFAM Gold Standard

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write # Para comentarios en PRs

concurrency:
  group: 'pages-${{ github.ref }}'
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  quality-checks:
    name: Quality Assurance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Para an√°lisis completo

      - name: Configurar pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Instalar dependencias
        run: pnpm install --frozen-lockfile

      - name: Verificar formato de c√≥digo
        run: pnpm run format:check

      - name: Lint del c√≥digo
        run: pnpm run lint

      - name: Verificaci√≥n de tipos TypeScript
        run: pnpm run type-check

      - name: Ejecutar tests
        run: pnpm run test:coverage

      - name: Subir reporte de cobertura
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

      - name: An√°lisis de seguridad
        run: pnpm audit --audit-level=moderate
        continue-on-error: true # No fallar el build, solo advertir

      - name: Verificar licencias
        run: pnpm list --depth=0
        continue-on-error: true

  build-and-analyze:
    name: Build & Performance Analysis
    runs-on: ubuntu-latest
    needs: quality-checks
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Configurar pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Instalar dependencias
        run: pnpm install --frozen-lockfile

      - name: Construir proyecto
        run: pnpm run build
        env:
          CI: true

      - name: Verificar tama√±o del bundle
        run: |
          echo "üì¶ Analizando tama√±o del bundle..."
          echo "================================"

          # Tama√±o total del directorio dist
          TOTAL_SIZE=$(du -sh dist | cut -f1)
          echo "Tama√±o total: $TOTAL_SIZE"

          # Tama√±o de archivos JS
          JS_SIZE=$(find dist -name "*.js" -exec du -ch {} + | grep total$ | cut -f1)
          echo "JavaScript: ${JS_SIZE:-0}"

          # Tama√±o de archivos CSS
          CSS_SIZE=$(find dist -name "*.css" -exec du -ch {} + | grep total$ | cut -f1)
          echo "CSS: ${CSS_SIZE:-0}"

          # Verificar l√≠mites
          JS_SIZE_KB=$(find dist -name "*.js" -exec cat {} + 2>/dev/null | wc -c | awk '{print int($1/1024)}')
          if [ "$JS_SIZE_KB" -gt 200 ]; then
            echo "‚ö†Ô∏è Advertencia: Bundle JS excede 200KB ($JS_SIZE_KB KB)"
          fi

      - name: Ejecutar Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:4321/testigos-solarpunk/
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3 # Ejecutar 3 veces para promediar
        continue-on-error: true # No fallar si Lighthouse falla

      - name: An√°lisis de accesibilidad
        run: |
          # Aqu√≠ podr√≠as agregar herramientas como axe-core
          echo "‚úÖ An√°lisis de accesibilidad pendiente de implementar"

      - name: Generar reporte de bundle
        run: |
          # Crear archivo de an√°lisis simple
          echo "# Bundle Analysis Report" > bundle-report.md
          echo "Generated on: $(date)" >> bundle-report.md
          echo "" >> bundle-report.md
          echo "## File sizes:" >> bundle-report.md
          find dist -type f -exec ls -lh {} \; | awk '{print $9 ": " $5}' >> bundle-report.md

      - name: Subir artefacto de build
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Subir reportes como artefactos
        uses: actions/upload-artifact@v4
        with:
          name: build-reports
          path: |
            bundle-report.md
            .lighthouseci/

  deploy:
    name: Deploy to GitHub Pages
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-analyze
    steps:
      - name: Desplegar a GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Comentar URL de despliegue
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ Despliegue exitoso! Vista previa disponible en: ${{ steps.deployment.outputs.page_url }}`
            })

  post-deploy-checks:
    name: Post-Deploy Verification
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Esperar a que el sitio est√© disponible
        run: sleep 30

      - name: Verificar que el sitio est√° en l√≠nea
        run: |
          SITE_URL="${{ needs.deploy.outputs.page_url || 'https://madfam-io.github.io/testigos-solarpunk/' }}"
          echo "Verificando: $SITE_URL"

          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$SITE_URL")

          if [ "$HTTP_CODE" -eq 200 ]; then
            echo "‚úÖ Sitio en l√≠nea y respondiendo correctamente"
          else
            echo "‚ùå Error: Sitio respondi√≥ con c√≥digo HTTP $HTTP_CODE"
            exit 1
          fi

      - name: Test de performance en producci√≥n
        run: |
          echo "üîç Verificaci√≥n de performance pendiente"
          # Aqu√≠ podr√≠as agregar tests de performance en el sitio en vivo
