name: Lighthouse Performance Audit

on:
  # Run on pushes to main branch
  push:
    branches: [main]
  # Run on pull requests
  pull_request:
    branches: [main]
  # Allow manual trigger
  workflow_dispatch:
  # Run weekly to catch performance regressions
  schedule:
    - cron: '0 6 * * 1' # Every Monday at 6 AM UTC

jobs:
  lighthouse:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Test both mobile and desktop
        device: ['mobile', 'desktop']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build site
        run: |
          npm run build:github
        env:
          NODE_ENV: production

      - name: Wait for build
        run: sleep 5

      - name: Run Lighthouse CI (Mobile)
        if: matrix.device == 'mobile'
        run: |
          npx lhci autorun --config ./lighthouserc.cjs
        env:
          LHCI_BUILD_CONTEXT__CURRENT_HASH: ${{ github.sha }}
          LHCI_BUILD_CONTEXT__COMMIT_TIME: ${{ github.event.head_commit.timestamp }}
          LHCI_BUILD_CONTEXT__CURRENT_BRANCH: ${{ github.ref_name }}
          LHCI_BUILD_CONTEXT__COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

      - name: Run Lighthouse CI (Desktop)
        if: matrix.device == 'desktop'
        run: |
          npx lhci autorun --config ./lighthouserc.desktop.cjs
        env:
          LHCI_BUILD_CONTEXT__CURRENT_HASH: ${{ github.sha }}
          LHCI_BUILD_CONTEXT__COMMIT_TIME: ${{ github.event.head_commit.timestamp }}
          LHCI_BUILD_CONTEXT__CURRENT_BRANCH: ${{ github.ref_name }}
          LHCI_BUILD_CONTEXT__COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results-${{ matrix.device }}
          path: lighthouse-results/
          retention-days: 30

      - name: Comment PR with Lighthouse results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Find the latest lighthouse report
            const resultsDir = './lighthouse-results';
            if (fs.existsSync(resultsDir)) {
              const files = fs.readdirSync(resultsDir);
              const reportFiles = files.filter(f => f.endsWith('-report.json'));
              
              if (reportFiles.length > 0) {
                const reportPath = path.join(resultsDir, reportFiles[0]);
                const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
                
                const scores = {
                  performance: Math.round(report.categories.performance.score * 100),
                  accessibility: Math.round(report.categories.accessibility.score * 100),
                  'best-practices': Math.round(report.categories['best-practices'].score * 100),
                  seo: Math.round(report.categories.seo.score * 100)
                };
                
                const comment = `## 🏄‍♂️ Lighthouse Results (${{ matrix.device }})
                
                | Category | Score |
                |----------|-------|
                | 🚀 Performance | ${scores.performance}% |
                | ♿ Accessibility | ${scores.accessibility}% |
                | ✅ Best Practices | ${scores['best-practices']}% |
                | 🔍 SEO | ${scores.seo}% |
                
                ${scores.performance >= 90 ? '🎉' : '⚠️'} Performance: ${scores.performance >= 90 ? 'Excellent!' : 'Needs improvement'}
                ${scores.accessibility >= 95 ? '🎉' : '⚠️'} Accessibility: ${scores.accessibility >= 95 ? 'Excellent!' : 'Needs improvement'}
                `;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              }
            }

  # Merge lighthouse results and create summary
  lighthouse-summary:
    runs-on: ubuntu-latest
    needs: lighthouse
    if: always()

    steps:
      - name: Download mobile results
        uses: actions/download-artifact@v4
        with:
          name: lighthouse-results-mobile
          path: mobile-results/
        continue-on-error: true

      - name: Download desktop results
        uses: actions/download-artifact@v4
        with:
          name: lighthouse-results-desktop
          path: desktop-results/
        continue-on-error: true

      - name: Create performance summary
        run: |
          echo "# 📊 Lighthouse Performance Summary" > performance-summary.md
          echo "" >> performance-summary.md
          echo "## Build Information" >> performance-summary.md
          echo "- **Commit:** ${{ github.sha }}" >> performance-summary.md
          echo "- **Branch:** ${{ github.ref_name }}" >> performance-summary.md
          echo "- **Triggered by:** ${{ github.event_name }}" >> performance-summary.md
          echo "- **Date:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> performance-summary.md
          echo "" >> performance-summary.md

          if [ -d "mobile-results" ]; then
            echo "## 📱 Mobile Results Available" >> performance-summary.md
          fi

          if [ -d "desktop-results" ]; then
            echo "## 🖥️ Desktop Results Available" >> performance-summary.md
          fi

          echo "" >> performance-summary.md
          echo "View detailed results in the artifacts section above." >> performance-summary.md

      - name: Upload summary
        uses: actions/upload-artifact@v4
        with:
          name: performance-summary
          path: performance-summary.md
          retention-days: 30
