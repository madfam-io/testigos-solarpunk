---
/**
 * Language Selector Component - Testigos de Solarpunk
 * Enterprise-grade bilingual navigation with DIY Magazine Cutout aesthetic
 *
 * @component LanguageSelector
 * @description Interactive language selector preserving magazine cutout design
 * @author MADFAM
 * @version 0.3.0+i18n
 */

import { languages, getLocalizedPath, type Language } from '@/i18n/config';
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'div'> {
  currentLang: Language;
  currentPath?: string;
  showLabels?: boolean;
  variant?: 'compact' | 'expanded';
}

const {
  currentLang,
  currentPath = '/',
  showLabels = false,
  variant = 'compact',
  class: className,
  ...attrs
} = Astro.props;

// Get current path without language prefix and base path for proper alternate URLs
const cleanPath = currentPath
  .replace(/^\/testigos-solarpunk/, '') // Remove base path if present
  .replace(/^\/(es|en)/, '') // Remove language prefix
  .replace(/\/$/, ''); // Remove trailing slash

// Ensure we have a clean path to translate
const pathToTranslate = cleanPath.length > 0 ? cleanPath : '/';

// Generate alternate language URLs
const alternateUrls = Object.keys(languages).map((lang) => {
  const targetLang = lang as Language;
  const localizedPath = getLocalizedPath(pathToTranslate, targetLang);

  // Add base path for GitHub Pages if needed
  const baseUrl = import.meta.env.BASE_URL ?? '';
  const fullUrl =
    baseUrl.length > 0
      ? `${baseUrl}${localizedPath}`.replace(/\/+/g, '/')
      : localizedPath;

  return {
    lang: targetLang,
    url: fullUrl,
    label: languages[targetLang],
    isActive: targetLang === currentLang,
  };
});
---

<div
  class:list={['language-selector', `language-selector--${variant}`, className]}
  data-language-selector
  {...attrs}
>
  <div class="language-toggle-group">
    {
      alternateUrls.map(({ lang, url, label, isActive }) => (
        <a
          href={url}
          class:list={[
            'language-option',
            { 'language-option--active': isActive },
          ]}
          aria-label={`Switch to ${label}`}
          aria-current={isActive ? 'page' : undefined}
          data-lang={lang}
          hreflang={lang}
        >
          <span class="language-code">{lang.toUpperCase()}</span>
          {showLabels && <span class="language-label">{label}</span>}
        </a>
      ))
    }
  </div>
</div>

<script>
  // Track language changes for analytics
  document.addEventListener('click', (e) => {
    const langOption = (e.target as Element)?.closest('[data-lang]');
    if (langOption) {
      const newLang = langOption.getAttribute('data-lang');
      const currentLang = document.documentElement.lang || 'es';

      // Add visual feedback
      (langOption as HTMLElement).style.transform = 'scale(0.95) rotate(-1deg)';
      setTimeout(() => {
        (langOption as HTMLElement).style.transform = '';
      }, 150);

      // Dispatch custom event for analytics tracking
      window.dispatchEvent(
        new CustomEvent('languageChange', {
          detail: { from: currentLang, to: newLang },
        })
      );

      // Update html lang attribute for screen readers
      setTimeout(() => {
        document.documentElement.lang = newLang || 'es';
      }, 100);
    }
  });
</script>

<style>
  .language-selector {
    position: relative;
    display: inline-flex;
    align-items: center;
  }

  .language-toggle-group {
    display: inline-flex;
    align-items: center;
    background: var(--bg-elevated, #242428);
    border: 2px solid var(--border-default);
    border-radius: 2rem;
    padding: 0.25rem;
    gap: 0.375rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .language-option {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2.5rem;
    height: 2.5rem;
    padding: 0;
    text-decoration: none;
    color: var(--text-secondary, rgba(255, 255, 255, 0.87));
    border-radius: 50%;
    font-weight: 600;
    font-size: 0.875rem;
    transition: all 0.2s ease;
    position: relative;
    background: transparent;
  }

  .language-option:hover {
    background: var(--hover-overlay, rgba(255, 255, 255, 0.1));
    transform: scale(1.1);
    box-shadow: 0 0 0 2px var(--madfam-green);
  }

  .language-option--active {
    background: var(--madfam-green, #66bb6a);
    color: white;
    font-weight: 700;
    box-shadow:
      0 0 0 2px var(--bg-elevated),
      0 0 0 4px var(--madfam-green);
  }

  .language-option--active:hover {
    background: var(--madfam-green, #66bb6a);
    color: white;
    transform: scale(1.05);
  }

  .language-option:focus-visible {
    outline: 3px solid var(--madfam-yellow, #ffc107);
    outline-offset: 2px;
  }

  .language-code {
    font-family: var(--font-mono, 'Space Mono', monospace);
    font-weight: 700;
    letter-spacing: 0.5px;
  }

  .language-label {
    font-size: 0.75rem;
    opacity: 0.8;
  }

  /* Compact variant (default) */
  .language-selector--compact .language-option {
    width: 2.25rem;
    height: 2.25rem;
    font-size: 0.75rem;
  }

  .language-selector--compact .language-code {
    font-size: 0.75rem;
  }

  /* Expanded variant with more spacing */
  .language-selector--expanded .language-toggle-group {
    gap: 0.5rem;
    padding: 0.375rem;
  }

  .language-selector--expanded .language-option {
    width: 3rem;
    height: 3rem;
  }

  .language-selector--expanded .language-code {
    font-size: 1rem;
  }

  .language-selector--expanded .language-label {
    font-size: 0.625rem;
    margin-top: 0.125rem;
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .language-toggle-group,
    .language-option {
      transition: none;
      transform: none;
    }

    .language-option:hover {
      transform: none;
    }

    .language-option--active {
      transform: none;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .language-toggle-group {
      border-width: 4px;
      background: var(--bg-primary);
    }

    .language-option {
      background: var(--bg-secondary);
    }

    .language-option--active {
      background: var(--text-primary);
      color: var(--bg-primary);
    }
  }

  /* Dark theme specific adjustments */
  :global([data-theme='dark']) .language-toggle-group {
    border-color: var(--border-subtle);
    background: var(--bg-tertiary, #1c1c1f);
  }

  :global([data-theme='dark']) .language-option--active {
    background: var(--madfam-green, #66bb6a);
    color: var(--bg-primary, #0a0a0b);
  }

  /* Light theme specific adjustments */
  :global([data-theme='light']) .language-toggle-group {
    border-color: var(--border-default);
    background: var(--bg-tertiary, #f5f5f5);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  }

  :global([data-theme='light']) .language-option {
    color: var(--text-primary);
  }

  :global([data-theme='light']) .language-option:hover {
    background: rgba(0, 0, 0, 0.04);
  }

  :global([data-theme='light']) .language-option--active {
    background: var(--madfam-green, #4caf50);
    color: white;
  }

  /* Mobile responsive design */
  @media (max-width: 768px) {
    .language-selector--compact .language-option {
      width: 2rem;
      height: 2rem;
      font-size: 0.7rem;
    }

    .language-toggle-group {
      padding: 0.2rem;
      gap: 0.25rem;
    }
  }

  /* Print styles */
  @media print {
    .language-selector {
      display: none;
    }
  }
</style>
