---
/**
 * Language Selector Component - Testigos de Solarpunk
 * Enterprise-grade bilingual navigation with DIY Magazine Cutout aesthetic
 *
 * @component LanguageSelector
 * @description Interactive language selector preserving magazine cutout design
 * @author MADFAM
 * @version 0.3.0+i18n
 */

import { languages, getLocalizedPath, type Language } from '@/i18n/config';
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'div'> {
  currentLang: Language;
  currentPath?: string;
  showLabels?: boolean;
  variant?: 'compact' | 'expanded';
}

const {
  currentLang,
  currentPath = '/',
  showLabels = false,
  variant = 'compact',
  class: className,
  ...attrs
} = Astro.props;

// Get current path without language prefix for proper alternate URLs
const pathWithoutLang =
  currentPath.replace(/^\/(es|en)/, '') !== ''
    ? currentPath.replace(/^\/(es|en)/, '')
    : '/';

// Generate alternate language URLs
const alternateUrls = Object.keys(languages).map((lang) => ({
  lang: lang as Language,
  url: getLocalizedPath(pathWithoutLang, lang as Language),
  label: languages[lang as Language],
  isActive: lang === currentLang,
}));
---

<div
  class:list={['language-selector', `language-selector--${variant}`, className]}
  data-language-selector
  {...attrs}
>
  <div class="language-toggle-group">
    {
      alternateUrls.map(({ lang, url, label, isActive }) => (
        <a
          href={url}
          class:list={[
            'language-option',
            'emoji-cutout',
            { 'language-option--active': isActive },
          ]}
          aria-label={`Switch to ${label}`}
          aria-current={isActive ? 'page' : undefined}
          data-lang={lang}
          hreflang={lang}
        >
          <span class="language-code">{lang.toUpperCase()}</span>
          {showLabels && <span class="language-label">{label}</span>}
        </a>
      ))
    }
  </div>
</div>

<script>
  // Track language changes for analytics
  document.addEventListener('click', (e) => {
    const langOption = (e.target as Element)?.closest('[data-lang]');
    if (langOption) {
      const newLang = langOption.getAttribute('data-lang');
      const currentLang = document.documentElement.lang || 'es';

      // Add visual feedback
      (langOption as HTMLElement).style.transform = 'scale(0.95) rotate(-1deg)';
      setTimeout(() => {
        (langOption as HTMLElement).style.transform = '';
      }, 150);

      // Dispatch custom event for analytics tracking
      window.dispatchEvent(
        new CustomEvent('languageChange', {
          detail: { from: currentLang, to: newLang },
        })
      );

      // Update html lang attribute for screen readers
      setTimeout(() => {
        document.documentElement.lang = newLang || 'es';
      }, 100);
    }
  });
</script>

<style>
  .language-selector {
    position: relative;
    display: inline-flex;
    align-items: center;
  }

  .language-toggle-group {
    display: flex;
    background: var(--bg-elevated, #242428);
    border: 3px solid var(--madfam-green, #66bb6a);
    border-radius: 2rem;
    padding: 0.25rem;
    gap: 0.25rem;
    transform: rotate(1deg);

    /* Magazine cutout effect for container */
    box-shadow:
      3px 3px 0 var(--cutout-shadow, rgba(0, 0, 0, 0.15)),
      inset 0 0 0 2px var(--paper-texture, rgba(102, 187, 106, 0.05));

    /* Paper texture background */
    background-image: radial-gradient(
        circle at 25% 25%,
        transparent 20%,
        rgba(255, 255, 255, 0.02) 21%,
        rgba(255, 255, 255, 0.02) 34%,
        transparent 35%
      ),
      linear-gradient(
        45deg,
        transparent 48%,
        rgba(255, 255, 255, 0.03) 49%,
        rgba(255, 255, 255, 0.03) 51%,
        transparent 52%
      );
  }

  .language-option {
    display: flex;
    align-items: center;
    gap: var(--space-xs, 0.25rem);
    padding: 0.5rem 1rem;
    text-decoration: none;
    color: var(--text-secondary, rgba(255, 255, 255, 0.87));
    border-radius: 1.5rem;
    font-weight: 500;
    font-size: 0.875rem;
    transition: all 0.3s ease;
    position: relative;

    /* Magazine cutout torn edge effect */
    clip-path: polygon(
      3% 0%,
      97% 2%,
      100% 18%,
      98% 32%,
      100% 48%,
      97% 65%,
      99% 82%,
      96% 100%,
      82% 98%,
      68% 100%,
      52% 97%,
      35% 99%,
      18% 96%,
      0% 85%,
      2% 68%,
      0% 52%,
      3% 35%,
      0% 18%,
      2% 3%
    );
  }

  .language-option:hover {
    background: var(--hover-overlay, rgba(255, 255, 255, 0.08));
    color: var(--madfam-green, #66bb6a);
    transform: scale(1.05) rotate(-1deg);
    box-shadow:
      2px 2px 0 var(--cutout-shadow, rgba(0, 0, 0, 0.15)),
      inset 0 0 10px rgba(102, 187, 106, 0.1);
  }

  .language-option--active {
    background: var(--madfam-green, #66bb6a);
    color: var(--bg-primary, #0a0a0b);
    font-weight: 600;
    transform: rotate(-0.5deg);

    /* Active state cutout shadow */
    box-shadow:
      inset 0 2px 4px rgba(0, 0, 0, 0.2),
      0 0 0 2px var(--madfam-yellow, #ffc107);
  }

  .language-option--active:hover {
    background: var(--madfam-green, #66bb6a);
    color: var(--bg-primary, #0a0a0b);
    transform: scale(1.02) rotate(-0.5deg);
  }

  .language-option:focus-visible {
    outline: 3px solid var(--madfam-yellow, #ffc107);
    outline-offset: 2px;
  }

  .language-code {
    font-family: var(--font-mono, 'Space Mono', monospace);
    font-weight: 700;
    letter-spacing: 0.5px;
  }

  .language-label {
    font-size: 0.75rem;
    opacity: 0.8;
  }

  /* Compact variant (default) */
  .language-selector--compact .language-option {
    padding: 0.5rem 0.875rem;
  }

  .language-selector--compact .language-code {
    font-size: 0.875rem;
  }

  /* Expanded variant with more spacing */
  .language-selector--expanded .language-toggle-group {
    gap: 0.5rem;
    padding: 0.375rem;
  }

  .language-selector--expanded .language-option {
    padding: 0.75rem 1.25rem;
    flex-direction: column;
    text-align: center;
  }

  .language-selector--expanded .language-code {
    font-size: 1rem;
  }

  .language-selector--expanded .language-label {
    font-size: 0.625rem;
    margin-top: 0.125rem;
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .language-toggle-group,
    .language-option {
      transition: none;
      transform: none;
    }

    .language-option:hover {
      transform: none;
    }

    .language-option--active {
      transform: none;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .language-toggle-group {
      border-width: 4px;
      background: var(--bg-primary);
    }

    .language-option {
      background: var(--bg-secondary);
      clip-path: none;
    }

    .language-option--active {
      background: var(--text-primary);
      color: var(--bg-primary);
    }
  }

  /* Dark theme specific adjustments */
  [data-theme='dark'] .language-toggle-group {
    border-color: var(--madfam-green-dark, #66bb6a);
    background: var(--bg-tertiary, #1c1c1f);
  }

  [data-theme='dark'] .language-option--active {
    background: var(--madfam-green-dark, #66bb6a);
    color: var(--bg-primary, #0a0a0b);
  }

  /* Light theme specific adjustments */
  [data-theme='light'] .language-toggle-group {
    border-color: var(--madfam-green, #4caf50);
    background: var(--bg-tertiary, #eeeeee);
    box-shadow:
      3px 3px 0 var(--cutout-shadow, rgba(0, 0, 0, 0.15)),
      inset 0 0 0 2px var(--paper-texture, rgba(76, 175, 80, 0.03));
  }

  [data-theme='light'] .language-option {
    color: var(--text-secondary, rgba(0, 0, 0, 0.87));
  }

  [data-theme='light'] .language-option:hover {
    background: var(--hover-overlay, rgba(0, 0, 0, 0.04));
    color: var(--madfam-green, #4caf50);
  }

  [data-theme='light'] .language-option--active {
    background: var(--madfam-green, #4caf50);
    color: white;
  }

  /* Mobile responsive design */
  @media (max-width: 768px) {
    .language-selector--expanded {
      /* On mobile, make expanded variant more compact */
    }

    .language-selector--expanded .language-option {
      flex-direction: row;
      padding: 0.5rem 1rem;
    }

    .language-selector--expanded .language-label {
      margin-top: 0;
      margin-left: 0.25rem;
    }
  }

  /* Print styles */
  @media print {
    .language-selector {
      display: none;
    }
  }
</style>
