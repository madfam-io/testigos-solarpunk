---
import PWAInstaller from '../components/PWAInstaller.astro';
import '../styles/main.css';
import { useTranslations } from '@/i18n/config';

export interface Props {
  title: string;
  description?: string;
  image?: string;
  noindex?: boolean;
}

const {
  title,
  description = 'Testigos de Solarpunk - Conectar, concientizar y crear comunidad a trav√©s del humor sostenible',
  image = '/og-image.jpg',
  noindex = false,
} = Astro.props;

const currentPath = Astro.url.pathname;
const baseUrl =
  import.meta.env.SITE !== ''
    ? import.meta.env.SITE
    : 'https://madfam-io.github.io';
let basePath =
  import.meta.env.BASE_URL !== ''
    ? import.meta.env.BASE_URL
    : '/testigos-solarpunk';

// Ensure basePath doesn't end with a slash
if (basePath.endsWith('/')) {
  basePath = basePath.slice(0, -1);
}

// Detect language from current path
const pathSegments = currentPath.split('/').filter(Boolean);
const lang = pathSegments[0] === 'en' ? 'en' : 'es';
const langPrefix = lang === 'es' ? '/es' : '/en';

const fullUrl = `${baseUrl}${basePath}${currentPath}`;
const imageUrl = `${baseUrl}${basePath}${image}`;
const siteTitle = `${title} | Testigos de Solarpunk - MADFAM`;

// Initialize translations
const t = useTranslations(lang);
---

<!doctype html>
<html lang={lang === 'es' ? 'es-MX' : 'en-US'} data-theme="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <meta
      name="robots"
      content={noindex ? 'noindex, nofollow' : 'index, follow'}
    />
    <meta name="author" content="MADFAM" />
    <meta
      name="keywords"
      content="solarpunk, evangelista ecol√≥gico, sostenibilidad, humor verde, MADFAM, narrativa esperanzadora"
    />

    <!-- PWA Meta Tags -->
    <meta name="theme-color" content="var(--madfam-yellow)" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta
      name="apple-mobile-web-app-status-bar-style"
      content="black-translucent"
    />
    <meta name="apple-mobile-web-app-title" content="Testigos" />
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="application-name" content="Testigos de Solarpunk" />
    <meta name="msapplication-TileColor" content="var(--madfam-yellow)" />
    <meta
      name="msapplication-config"
      content={`${basePath}/browserconfig.xml`}
    />

    <!-- PWA Manifest -->
    <link rel="manifest" href={`${basePath}/manifest.json`} />

    <!-- iOS Icons -->
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href={`${basePath}/apple-touch-icon.png`}
    />

    <!-- Open Graph Meta Tags -->
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={fullUrl} />
    <meta property="og:image" content={imageUrl} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:site_name" content="Testigos de Solarpunk" />
    <meta property="og:locale" content={lang === 'es' ? 'es_MX' : 'en_US'} />

    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@TestigosSolar" />
    <meta name="twitter:creator" content="@MADFAM_io" />
    <meta name="twitter:title" content={siteTitle} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={imageUrl} />

    <!-- Canonical URL -->
    <link rel="canonical" href={fullUrl} />

    <!-- Favicons -->
    <link rel="icon" type="image/svg+xml" href={`${basePath}/favicon.svg`} />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href={`${basePath}/favicon-32x32.png`}
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href={`${basePath}/favicon-16x16.png`}
    />
    <link rel="shortcut icon" href={`${basePath}/favicon.ico`} />

    <!-- Preconnect to external domains -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

    <!-- DNS Prefetch -->
    <link rel="dns-prefetch" href="https://fonts.googleapis.com" />

    <!-- Preload critical resources -->
    <link
      rel="preload"
      href={`${basePath}/fonts/poppins-v20-latin-regular.woff2`}
      as="font"
      type="font/woff2"
      crossorigin
    />

    <!-- Fonts -->
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;900&family=Space+Mono:wght@400;700&display=swap"
      rel="stylesheet"
    />

    <!-- JSON-LD Structured Data -->
    <script
      type="application/ld+json"
      is:inline
      set:html={JSON.stringify({
        '@context': 'https://schema.org',
        '@type': 'WebSite',
        name: 'Testigos de Solarpunk',
        alternateName: 'Testigos',
        url: fullUrl,
        description,
        publisher: {
          '@type': 'Organization',
          name: 'MADFAM',
          logo: {
            '@type': 'ImageObject',
            url: `${baseUrl}${basePath}/icon-512.png`,
          },
        },
      })}
    />

    <meta name="generator" content={Astro.generator} />
    <title>{siteTitle}</title>
  </head>
  <body>
    <!-- Skip to main content link -->
    <a href="#main-content" class="skip-link">{t('a11y.skip.content')}</a>

    <!-- Main Navigation -->
    <nav class="nav-main" role="navigation" aria-label={t('aria.nav.main')}>
      <div class="nav-container">
        <div class="nav-brand">
          <a
            href={`${basePath}/`}
            class:list={currentPath === '/' ? 'active' : ''}
            aria-label={t('aria.nav.brand')}
          >
            <strong class="text-gradient">{t('site.title')}</strong>
          </a>
        </div>

        <button
          class="nav-mobile-toggle"
          aria-label={t('a11y.menu.open')}
          aria-expanded="false"
          aria-controls="nav-menu"
        >
          <span aria-hidden="true"></span>
          <span aria-hidden="true"></span>
          <span aria-hidden="true"></span>
        </button>

        <ul class="nav-menu" id="nav-menu" role="menubar">
          <li role="none">
            <a
              href={`${basePath}/proyecto/`}
              class:list={[
                'nav-link',
                currentPath.startsWith('/proyecto') ? 'active' : '',
              ]}
              role="menuitem"
              aria-current={currentPath.startsWith('/proyecto')
                ? 'page'
                : undefined}
            >
              {t('nav.project')}
            </a>
          </li>
          <li class="nav-dropdown" role="none">
            <button
              class="nav-dropdown-toggle nav-link"
              aria-expanded="false"
              aria-haspopup="true"
              aria-controls="contenido-menu"
              role="menuitem"
            >
              {t('nav.content')}
            </button>
            <div class="nav-dropdown-menu" id="contenido-menu" role="menu">
              <a href={`${basePath}/contenido/sketches/`} role="menuitem">
                üé¨ {t('nav.sketches')}
              </a>
              <a href={`${basePath}/contenido/podcast/`} role="menuitem">
                üéôÔ∏è {t('nav.podcast')}
              </a>
              <a href={`${basePath}/contenido/madlab/`} role="menuitem">
                üî¨ {t('nav.madlab')}
              </a>
            </div>
          </li>
          <li class="nav-dropdown" role="none">
            <button
              class="nav-dropdown-toggle nav-link"
              aria-expanded="false"
              aria-haspopup="true"
              aria-controls="universo-menu"
              role="menuitem"
            >
              {t('nav.universe')}
            </button>
            <div class="nav-dropdown-menu" id="universo-menu" role="menu">
              <a
                href={`${basePath}${langPrefix}/${lang === 'es' ? 'personajes' : 'characters'}/`}
                role="menuitem"
              >
                üë• {t('nav.characters')}
              </a>
              <a
                href={`${basePath}${langPrefix}/${lang === 'es' ? 'mundo' : 'world'}/`}
                role="menuitem"
              >
                üåç {t('nav.world')}
              </a>
              <a
                href={`${basePath}${langPrefix}/${lang === 'es' ? 'guiones' : 'scripts'}/`}
                role="menuitem"
              >
                üìù {t('nav.scripts')}
              </a>
            </div>
          </li>
          <li role="none">
            <a
              href={`${basePath}${langPrefix}/${lang === 'es' ? 'comunidad' : 'community'}/`}
              class:list={[
                'nav-link',
                currentPath.startsWith('/comunidad') ? 'active' : '',
              ]}
              role="menuitem"
              aria-current={currentPath.startsWith('/comunidad')
                ? 'page'
                : undefined}
            >
              {t('nav.community')}
            </a>
          </li>
          <li role="none">
            <a
              href={`${basePath}/produccion/`}
              class:list={[
                'nav-link',
                currentPath.startsWith('/produccion') ? 'active' : '',
              ]}
              role="menuitem"
              aria-current={currentPath.startsWith('/produccion')
                ? 'page'
                : undefined}
            >
              {t('nav.production')}
            </a>
          </li>
          <li role="none">
            <a
              href={`${basePath}/impacto/`}
              class:list={[
                'nav-link',
                currentPath.startsWith('/impacto') ? 'active' : '',
              ]}
              role="menuitem"
              aria-current={currentPath.startsWith('/impacto')
                ? 'page'
                : undefined}
            >
              {t('nav.impact')}
            </a>
          </li>
        </ul>

        <div class="nav-actions">
          <button
            class="theme-toggle"
            aria-label={t('a11y.theme.toggle')}
            title={t('theme.toggle.description')}
          >
            <span class="theme-icon" aria-hidden="true"
              ><span class="emoji emoji-sm">üåô</span></span
            >
          </button>
        </div>
      </div>
    </nav>

    <main id="main-content" class="main-container" tabindex="-1">
      <slot />
    </main>

    <footer class="footer-main">
      <div class="container">
        <div class="grid grid-cols-3">
          <div>
            <h4>{t('footer.creative.universe')}</h4>
            <ul>
              <li>
                <a
                  href={`${basePath}${langPrefix}/${lang === 'es' ? 'personajes' : 'characters'}/`}
                  >{t('footer.character.bible')}</a
                >
              </li>
              <li>
                <a
                  href={`${basePath}${langPrefix}/${lang === 'es' ? 'guiones' : 'scripts'}/`}
                  >{t('footer.script.repository')}</a
                >
              </li>
              <li>
                <a
                  href={`${basePath}${langPrefix}/${lang === 'es' ? 'mundo' : 'world'}/`}
                  >{t('nav.world')}</a
                >
              </li>
            </ul>
          </div>
          <div>
            <h4>{t('footer.for.creators')}</h4>
            <ul>
              <li>
                <a
                  href={`${basePath}${langPrefix}/${lang === 'es' ? 'recursos' : 'resources'}/`}
                  >{t('footer.guides.templates')}</a
                >
              </li>
              <li>
                <a
                  href={`${basePath}${langPrefix}/${lang === 'es' ? 'produccion' : 'production'}/`}
                  >{t('footer.style.guide')}</a
                >
              </li>
              <li>
                <a
                  href={`${basePath}${langPrefix}/${lang === 'es' ? 'filosofia' : 'philosophy'}/`}
                  >{t('footer.project.philosophy')}</a
                >
              </li>
              <li>
                <a
                  href={`${basePath}${langPrefix}/${lang === 'es' ? 'guia-visual' : 'visual-guide'}/`}
                  >{t('footer.visual.guide')}</a
                >
              </li>
            </ul>
          </div>
          <div>
            <h4>{t('footer.connect')}</h4>
            <ul>
              <li>
                <a
                  href={`${basePath}${langPrefix}/${lang === 'es' ? 'comunidad' : 'community'}/`}
                  >{t('footer.join.community')}</a
                >
              </li>
              <li>
                <a
                  href={`${basePath}${langPrefix}/${lang === 'es' ? 'impacto' : 'impact'}/`}
                  >{t('footer.our.impact')}</a
                >
              </li>
              <li>
                <a
                  href="https://github.com/madfam-io/testigos-solarpunk"
                  target="_blank"
                  rel="noopener noreferrer"
                  aria-label={t('aria.github.project')}
                >
                  GitHub
                </a>
              </li>
            </ul>
          </div>
        </div>
        <div class="text-center mt-5 text-tertiary">
          <p>&copy; 2025 {t('site.title')} - {t('footer.copyright')}</p>
        </div>
      </div>
    </footer>

    <PWAInstaller />

    <!-- Screen reader announcements -->
    <div
      class="sr-only"
      aria-live="polite"
      aria-atomic="true"
      id="page-announcer"
      data-theme-dark={t('theme.dark')}
      data-theme-light={t('theme.light')}
      data-theme-changed={t('theme.changed')}
      data-page-loaded={t('status.page.loaded')}
    >
    </div>
  </body>
</html>

<style>
  .main-container {
    min-height: calc(100vh - 120px);
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem;
  }

  .footer-main {
    background-color: var(--bg-secondary);
    border-top: 1px solid var(--border-subtle);
    padding: var(--space-xxl) 0;
    margin-top: var(--space-xxl);
  }

  .footer-main h4 {
    color: var(--madfam-yellow-dark);
    margin-bottom: var(--space-md);
    font-size: 1.125rem;
  }

  .footer-main ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .footer-main li {
    margin-bottom: var(--space-sm);
  }

  .footer-main a {
    color: var(--text-tertiary);
    transition: color var(--transition-fast);
  }

  .footer-main a:hover {
    color: var(--text-primary);
  }

  @media (max-width: 768px) {
    .main-container {
      padding: 1rem;
    }

    .grid-cols-3 {
      grid-template-columns: 1fr;
      gap: var(--space-xl);
    }
  }
</style>

<script>
  // Mobile menu toggle
  const mobileToggle = document.querySelector('.nav-mobile-toggle');
  const navMenu = document.querySelector('.nav-menu');

  mobileToggle?.addEventListener('click', () => {
    const isOpen = navMenu?.classList.contains('active');
    navMenu?.classList.toggle('active');
    mobileToggle.setAttribute('aria-expanded', (!isOpen).toString());
  });

  // Dropdown menus with keyboard navigation
  const dropdowns = document.querySelectorAll('.nav-dropdown');

  dropdowns.forEach((dropdown) => {
    const toggle = dropdown.querySelector('.nav-dropdown-toggle');
    const menu = dropdown.querySelector('.nav-dropdown-menu');

    // Mouse events
    dropdown.addEventListener('mouseenter', () => {
      menu?.classList.add('show');
      toggle?.setAttribute('aria-expanded', 'true');
    });

    dropdown.addEventListener('mouseleave', () => {
      menu?.classList.remove('show');
      toggle?.setAttribute('aria-expanded', 'false');
    });

    // Keyboard events
    toggle?.addEventListener('click', (e) => {
      e.preventDefault();
      const isOpen = menu?.classList.contains('show');
      menu?.classList.toggle('show');
      toggle.setAttribute('aria-expanded', (!isOpen).toString());
    });

    // Close on Escape
    dropdown.addEventListener('keydown', (e) => {
      const keyboardEvent = e as KeyboardEvent;
      if (keyboardEvent.key === 'Escape') {
        menu?.classList.remove('show');
        toggle?.setAttribute('aria-expanded', 'false');
        if (toggle instanceof HTMLElement) {
          toggle.focus();
        }
      }
    });
  });

  // Theme toggle
  const themeToggle = document.querySelector('.theme-toggle');
  const html = document.documentElement;
  const themeIcon = document.querySelector('.theme-icon');

  // Check for saved theme preference or default to dark
  const currentTheme = localStorage.getItem('theme') || 'dark';
  html.setAttribute('data-theme', currentTheme);
  if (themeIcon) {
    themeIcon.innerHTML =
      currentTheme === 'dark'
        ? '<span class="emoji emoji-sm">üåô</span>'
        : '<span class="emoji emoji-sm">‚òÄÔ∏è</span>';
  }

  themeToggle?.addEventListener('click', () => {
    const currentTheme = html.getAttribute('data-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

    html.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);

    if (themeIcon) {
      themeIcon.innerHTML =
        newTheme === 'dark'
          ? '<span class="emoji emoji-sm">üåô</span>'
          : '<span class="emoji emoji-sm">‚òÄÔ∏è</span>';
    }

    // Announce theme change to screen readers
    const announcer = document.getElementById('page-announcer');
    if (announcer) {
      const darkLabel = announcer.getAttribute('data-theme-dark') || 'dark';
      const lightLabel = announcer.getAttribute('data-theme-light') || 'light';
      const template =
        announcer.getAttribute('data-theme-changed') ||
        'Theme changed to {theme}';
      const themeLabel = newTheme === 'dark' ? darkLabel : lightLabel;
      announcer.textContent = template.replace('{theme}', themeLabel);
    }
  });

  // Announce page changes for screen readers
  let pageAnnouncer = document.getElementById('page-announcer');

  document.addEventListener('astro:page-load', () => {
    if (pageAnnouncer) {
      const template =
        pageAnnouncer.getAttribute('data-page-loaded') ||
        'Page loaded: {title}';
      pageAnnouncer.textContent = template.replace('{title}', document.title);
    }
  });

  // Keyboard navigation helpers
  document.addEventListener('keydown', (e) => {
    // Alt + 1: Go to main content
    if (e.altKey && e.key === '1') {
      document.getElementById('main-content')?.focus();
    }

    // Alt + 2: Go to navigation
    if (e.altKey && e.key === '2') {
      const navMain = document.querySelector('.nav-main');
      if (navMain instanceof HTMLElement) {
        navMain.focus();
      }
    }
  });
</script>
