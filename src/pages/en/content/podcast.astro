---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { useTranslations } from '@/i18n/config';

const lang = 'en';
const t = useTranslations(lang);
let basePath =
  import.meta.env.BASE_URL != null && import.meta.env.BASE_URL !== ''
    ? import.meta.env.BASE_URL
    : '/testigos-solarpunk';

// Ensure basePath doesn't end with a slash
if (basePath.endsWith('/')) {
  basePath = basePath.slice(0, -1);
}
---

<BaseLayout
  lang={lang}
  title={t('podcast.title')}
  description={t('podcast.description')}
>
  <section class="hero-podcast">
    <div class="container">
      <span class="fase-label">{t('podcast.hero.phase')}</span>
      <h1>{t('podcast.hero.title')}</h1>
      <p class="hero-description">
        {t('podcast.hero.description')}
      </p>

      <h2 class="sr-only">{t('podcast.status.title')}</h2>
      <div class="podcast-preview">
        <div class="preview-card">
          <div class="preview-icon">
            <span class="emoji-cutout emoji-hero emoji-xl theme-purple flutter"
              >üéôÔ∏è</span
            >
          </div>
          <h3>{t('phase2.status')}</h3>
          <p>{t('podcast.status.date')}</p>
        </div>
      </div>
    </div>
  </section>

  <section class="podcast-features">
    <div class="container">
      <h2>{t('podcast.features.title')}</h2>
      <div class="features-grid">
        <div class="feature-card">
          <span class="feature-icon"
            ><span class="emoji-cutout emoji-card emoji-lg theme-purple"
              >üß†</span
            ></span
          >
          <h3>{t('podcast.features.depth.title')}</h3>
          <p>
            {t('podcast.features.depth.description')}
          </p>
        </div>

        <div class="feature-card">
          <span class="feature-icon"
            ><span class="emoji-cutout emoji-card emoji-lg theme-solar">üåü</span
            ></span
          >
          <h3>{t('podcast.features.experts.title')}</h3>
          <p>
            {t('podcast.features.experts.description')}
          </p>
        </div>

        <div class="feature-card">
          <span class="feature-icon"
            ><span class="emoji-cutout emoji-card emoji-lg theme-purple"
              >üí°</span
            ></span
          >
          <h3>{t('podcast.features.practical.title')}</h3>
          <p>
            {t('podcast.features.practical.description')}
          </p>
        </div>

        <div class="feature-card">
          <span class="feature-icon"
            ><span class="emoji-cutout emoji-card emoji-lg theme-solar">üéØ</span
            ></span
          >
          <h3>{t('podcast.features.topics.title')}</h3>
          <p>
            {t('podcast.features.topics.description')}
          </p>
        </div>
      </div>
    </div>
  </section>

  <section class="podcast-topics">
    <div class="container">
      <h2>{t('podcast.topics.title')}</h2>
      <div class="topics-list">
        <div class="topic-item">
          <h3>
            <span class="emoji-cutout emoji-md theme-green">üå±</span>
            {t('podcast.topics.urban_farming.title')}
          </h3>
          <p>{t('podcast.topics.urban_farming.description')}</p>
        </div>
        <div class="topic-item">
          <h3>
            <span class="emoji-cutout emoji-md theme-solar">‚ö°</span>
            {t('podcast.topics.community_energy.title')}
          </h3>
          <p>{t('podcast.topics.community_energy.description')}</p>
        </div>
        <div class="topic-item">
          <h3>
            <span class="emoji-cutout emoji-md theme-green">‚ôªÔ∏è</span>
            {t('podcast.topics.circular_economy.title')}
          </h3>
          <p>{t('podcast.topics.circular_economy.description')}</p>
        </div>
        <div class="topic-item">
          <h3>
            <span class="emoji-cutout emoji-md theme-green">üèòÔ∏è</span>
            {t('podcast.topics.sustainable_urbanism.title')}
          </h3>
          <p>{t('podcast.topics.sustainable_urbanism.description')}</p>
        </div>
        <div class="topic-item">
          <h3>
            <span class="emoji-cutout emoji-md theme-community">ü§ù</span>
            {t('podcast.topics.climate_justice.title')}
          </h3>
          <p>{t('podcast.topics.climate_justice.description')}</p>
        </div>
        <div class="topic-item">
          <h3>
            <span class="emoji-cutout emoji-md theme-green">üî¨</span>
            {t('podcast.topics.green_innovation.title')}
          </h3>
          <p>{t('podcast.topics.green_innovation.description')}</p>
        </div>
      </div>
    </div>
  </section>

  <section class="podcast-notify">
    <div class="container">
      <div class="notify-card">
        <h3>{t('podcast.notify.title')}</h3>
        <p>{t('podcast.notify.description')}</p>
        <form class="notify-form" enctype="application/x-www-form-urlencoded">
          <input
            type="email"
            placeholder={t('podcast.notify.placeholder')}
            class="email-input"
            required
            aria-required="true"
            aria-label={t('podcast.notify.aria_label')}
          />
          <button type="submit" class="btn btn-primary"
            >{t('podcast.notify.button')}</button
          >
        </form>
      </div>
    </div>
  </section>

  <section class="podcast-cta">
    <div class="container text-center">
      <h2>{t('podcast.cta.title')}</h2>
      <p>{t('podcast.cta.description')}</p>
      <a href={`${basePath}/en/content/sketches/`} class="btn btn-primary">
        <span class="emoji-cutout emoji-button emoji-md theme-solar">üé¨</span>
        {t('podcast.cta.button')}
      </a>
    </div>
  </section>
</BaseLayout>

<style>
  .hero-podcast {
    background: linear-gradient(
      135deg,
      var(--purpura-creativo) 0%,
      rgba(102, 51, 153, 0.2) 100%
    );
    padding: var(--espacio-xxl) 0;
    text-align: center;
    color: var(--text-on-accent, #000000);
  }

  .fase-label {
    background: var(--border-subtle);
    backdrop-filter: blur(10px);
    padding: 8px 20px;
    border-radius: 20px;
    font-weight: 500;
    display: inline-block;
    margin-bottom: var(--espacio-md);
  }

  .hero-podcast h1 {
    font-size: 3rem;
    margin-bottom: var(--espacio-md);
  }

  .hero-description {
    font-size: 1.2rem;
    max-width: 600px;
    margin: 0 auto var(--espacio-xl);
    opacity: 0.9;
  }

  .podcast-preview {
    margin-top: var(--espacio-xl);
  }

  .preview-card {
    background: var(--torn-edge-color);
    backdrop-filter: blur(10px);
    padding: var(--espacio-xl);
    border-radius: 16px;
    display: inline-block;
    border: 1px solid var(--border-subtle);
  }

  .preview-icon {
    font-size: 4rem;
    margin-bottom: var(--espacio-md);
  }

  .preview-card h3 {
    color: var(--text-on-accent, #000000);
    margin-bottom: var(--espacio-sm);
  }

  .preview-card p {
    font-size: 1.2rem;
    opacity: 0.8;
  }

  /* Features */
  .podcast-features {
    padding: var(--espacio-xxl) 0;
    background: var(--fondo-secundario);
  }

  .podcast-features h2 {
    text-align: center;
    font-size: 2.5rem;
    margin-bottom: var(--espacio-xl);
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: var(--espacio-xl);
  }

  .feature-card {
    background: var(--bg-secondary, #1a1a1b);
    color: var(--text-primary, #ffffff);
    padding: var(--espacio-xl);
    border-radius: 12px;
    text-align: center;
    border: 1px solid var(--border-subtle, var(--torn-edge-color));
    box-shadow: 0 4px 6px var(--cutout-shadow-dark);
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
  }

  .feature-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 12px 24px var(--shadow-overlay-dark-medium);
  }

  .feature-icon {
    font-size: 3rem;
    display: block;
    margin-bottom: var(--espacio-md);
  }

  .feature-card h3 {
    margin-bottom: var(--espacio-sm);
    color: var(--purpura-creativo);
  }

  /* Topics */
  .podcast-topics {
    padding: var(--espacio-xxl) 0;
  }

  .podcast-topics h2 {
    text-align: center;
    font-size: 2rem;
    margin-bottom: var(--espacio-xl);
  }

  .topics-list {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--espacio-lg);
    max-width: 900px;
    margin: 0 auto;
  }

  .topic-item {
    padding: var(--espacio-lg);
    background: var(--fondo-secundario);
    border-radius: 12px;
    border-left: 4px solid var(--purpura-creativo);
  }

  .topic-item h3 {
    margin-bottom: var(--espacio-sm);
    color: var(--purpura-creativo);
  }

  /* Notify Section */
  .podcast-notify {
    padding: var(--espacio-xxl) 0;
    background: linear-gradient(
      135deg,
      var(--fondo-primario) 0%,
      rgba(102, 51, 153, 0.05) 100%
    );
  }

  .notify-card {
    max-width: 600px;
    margin: 0 auto;
    text-align: center;
    background: var(--bg-secondary, #1a1a1b);
    color: var(--text-primary, #ffffff);
    padding: var(--espacio-xxl);
    border-radius: 16px;
    border: 1px solid var(--border-subtle, var(--torn-edge-color));
    box-shadow: 0 4px 6px var(--cutout-shadow-dark);
  }

  .notify-card h3 {
    font-size: 2rem;
    margin-bottom: var(--espacio-md);
    color: var(--purpura-creativo);
  }

  .notify-card p {
    font-size: 1.1rem;
    color: var(--text-secondary, #cccccc);
    margin-bottom: var(--espacio-xl);
  }

  .notify-form {
    display: flex;
    gap: var(--espacio-md);
    max-width: 400px;
    margin: 0 auto;
  }

  .email-input {
    flex: 1;
    padding: var(--espacio-md);
    border: 2px solid var(--borde-claro);
    border-radius: 8px;
    font-size: 1rem;
  }

  .email-input:focus {
    outline: none;
    border-color: var(--purpura-creativo);
  }

  /* CTA */
  .podcast-cta {
    padding: var(--espacio-xxl) 0;
  }

  .podcast-cta h2 {
    margin-bottom: var(--espacio-md);
  }

  .podcast-cta p {
    font-size: 1.2rem;
    color: var(--texto-secundario);
    margin-bottom: var(--espacio-xl);
  }

  @media (max-width: 768px) {
    .hero-podcast h1 {
      font-size: 2rem;
    }

    .notify-form {
      flex-direction: column;
    }

    .email-input {
      width: 100%;
    }
  }
</style>

<script>
  // Handle notify form
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.querySelector('.notify-form') as HTMLFormElement;
    if (form) {
      form.addEventListener('submit', (e) => {
        e.preventDefault();
        const emailInput = form.querySelector(
          '.email-input'
        ) as HTMLInputElement;
        if (emailInput) {
          const email = emailInput.value;
          alert(
            `Thank you! We'll notify you at ${email} when we launch the podcast.`
          );
          form.reset();
        }
      });
    }
  });
</script>
