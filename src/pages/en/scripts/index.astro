---
import BaseLayout from '../../../layouts/BaseLayout.astro';
// import { useTranslations } from '@/i18n/config';
import { getCollection, type CollectionEntry } from 'astro:content';
import { platformColors } from '../../../lib/script-constants';

const lang = 'en';
// const _t = useTranslations(lang); // Commented out - unused variable
const baseUrl = import.meta.env.BASE_URL ?? '';
const basePath = baseUrl !== '' ? baseUrl.replace(/\/$/, '') : '';
const scripts: CollectionEntry<'scripts'>[] = await getCollection('scripts');

// Initialize scriptsByPlatform using simple assignments
const scriptsByPlatform = {} as Record<string, CollectionEntry<'scripts'>[]>;
scriptsByPlatform['TikTok'] = scripts.filter(
  (s) => s.data.plataforma === 'TikTok'
);
scriptsByPlatform['Instagram'] = scripts.filter(
  (s) => s.data.plataforma === 'Instagram'
);
scriptsByPlatform['YouTube'] = scripts.filter(
  (s) => s.data.plataforma === 'YouTube'
);
---

<BaseLayout lang={lang} title="Guiones">
  <section class="hero-section">
    <div class="container">
      <h1 class="text-gradient">Repositorio de Guiones</h1>
      <p class="lead">
        Episodios dise√±ados espec√≠ficamente para cada plataforma, optimizados
        para contar historias de esperanza y cambio.
      </p>
    </div>
  </section>

  <section class="stats-section">
    <div class="container">
      <div class="stats-grid">
        <div class="stat-card">
          <span class="stat-number">{scripts.length}</span>
          <span class="stat-label">Episodios Totales</span>
        </div>
        <div class="stat-card">
          <span class="stat-number">{scriptsByPlatform.TikTok.length}</span>
          <span class="stat-label">TikToks</span>
        </div>
        <div class="stat-card">
          <span class="stat-number">{scriptsByPlatform.Instagram.length}</span>
          <span class="stat-label">Instagram Reels</span>
        </div>
        <div class="stat-card">
          <span class="stat-number">{scriptsByPlatform.YouTube.length}</span>
          <span class="stat-label">YouTube Videos</span>
        </div>
      </div>
    </div>
  </section>

  {/* eslint-disable @typescript-eslint/no-unsafe-return */}
  {
    Object.entries(scriptsByPlatform).map(([platform, platformScripts]) => {
      if (platformScripts.length > 0) {
        return (
          <section class="platform-section">
            <div class="container">
              <h2 style={`color: ${platformColors[platform]}`}>
                {platform} - {platformScripts.length} episodios
              </h2>
              <div class="scripts-grid">
                {platformScripts.map((script) => {
                  return (
                    <article class="script-card card">
                      <div class="script-header">
                        <span class="episode-badge">
                          {script.data.episodio}
                        </span>
                        <span class="duration">{script.data.duracion}</span>
                      </div>
                      <h3>{script.data.titulo}</h3>
                      <div class="script-meta">
                        <span class="location">
                          <span class="emoji-cutout emoji-sm theme-community">
                            üìç
                          </span>{' '}
                          {script.data.ubicacion}
                        </span>
                        <span class="status" data-status={script.data.estado}>
                          {script.data.estado}
                        </span>
                      </div>
                      <div class="script-tags">
                        {script.data.temas.map((tema: string) => {
                          return <span class="tag">#{tema}</span>;
                        })}
                      </div>
                      <a
                        href={`${basePath}/guiones/${script.id}/`}
                        class="btn btn-primary"
                      >
                        Leer Gui√≥n
                      </a>
                    </article>
                  );
                })}
              </div>
            </div>
          </section>
        );
      }
      return null;
    })
  }
  {/* eslint-enable @typescript-eslint/no-unsafe-return */}

  <section class="download-section">
    <div class="container text-center">
      <h2>Recursos para Creadores</h2>
      <p class="text-muted mb-3">
        Descarga plantillas y gu√≠as para crear tus propios episodios
      </p>
      <div class="download-buttons">
        <a
          href={`${basePath}/downloads/plantilla-tiktok.pdf`}
          class="btn btn-secondary"
          download
        >
          üìÑ Plantilla TikTok
        </a>
        <a
          href={`${basePath}/downloads/plantilla-instagram.pdf`}
          class="btn btn-secondary"
          download
        >
          üìÑ Plantilla Instagram
        </a>
        <a
          href={`${basePath}/downloads/guia-escritura.pdf`}
          class="btn btn-secondary"
          download
        >
          üìö Gu√≠a de Escritura
        </a>
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  .hero-section {
    background-color: var(--fondo-secundario);
    padding: var(--espacio-xxl) 0;
    text-align: center;
  }

  .lead {
    font-size: 1.25rem;
    max-width: 700px;
    margin: 0 auto;
    color: var(--texto-secundario);
  }

  .stats-section {
    padding: var(--espacio-xl) 0;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: var(--espacio-lg);
  }

  .stat-card {
    text-align: center;
    padding: var(--espacio-lg);
    background-color: var(--fondo-secundario);
    border-radius: 8px;
  }

  .stat-number {
    display: block;
    font-size: 3rem;
    font-weight: bold;
    color: var(--verde-sostenible);
  }

  .stat-label {
    display: block;
    color: var(--texto-secundario);
    margin-top: var(--espacio-sm);
  }

  .platform-section {
    padding: var(--espacio-xl) 0;
  }

  .platform-section h2 {
    margin-bottom: var(--espacio-xl);
  }

  .scripts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: var(--espacio-lg);
  }

  .script-card {
    display: flex;
    flex-direction: column;
  }

  .script-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--espacio-md);
  }

  .episode-badge {
    background-color: var(--purpura-creativo);
    color: var(--text-on-accent, #000000);
    padding: var(--espacio-xs) var(--espacio-sm);
    border-radius: 4px;
    font-family: var(--fuente-mono);
    font-size: 0.875rem;
  }

  .duration {
    color: var(--texto-secundario);
    font-size: 0.875rem;
  }

  .script-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: var(--espacio-md) 0;
    font-size: 0.875rem;
  }

  .location {
    color: var(--texto-secundario);
  }

  .status {
    padding: var(--espacio-xs) var(--espacio-sm);
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 500;
    text-transform: uppercase;
  }

  .status[data-status='borrador'] {
    background-color: rgba(255, 193, 7, 0.2);
    color: var(--warning, #ffb74d);
  }

  .status[data-status='revision'] {
    background-color: rgba(100, 181, 246, 0.2);
    color: var(--info, #64b5f6);
  }

  .status[data-status='aprobado'] {
    background-color: rgba(129, 199, 132, 0.2);
    color: var(--success, #81c784);
  }

  .status[data-status='filmado'] {
    background-color: rgba(var(--azul-tecnologico-rgb, 33, 150, 243), 0.2);
    color: var(--azul-tecnologico);
  }

  .script-tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--espacio-sm);
    margin: var(--espacio-md) 0 var(--espacio-lg);
  }

  .tag {
    background-color: var(--fondo-primario);
    padding: var(--espacio-xs) var(--espacio-sm);
    border-radius: 12px;
    font-size: 0.75rem;
    color: var(--azul-tecnologico);
  }

  .script-card .btn {
    margin-top: auto;
    width: 100%;
    text-align: center;
  }

  .download-section {
    background-color: var(--fondo-secundario);
    padding: var(--espacio-xxl) 0;
  }

  .download-buttons {
    display: flex;
    gap: var(--espacio-md);
    justify-content: center;
    flex-wrap: wrap;
  }

  @media (max-width: 768px) {
    .download-buttons {
      flex-direction: column;
      align-items: center;
    }

    .download-buttons .btn {
      width: 250px;
    }
  }
</style>
