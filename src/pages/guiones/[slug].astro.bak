---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { platformColors, statusColors } from '../../lib/script-constants';

export async function getStaticPaths(): Promise<
  Array<{
    params: { slug: string };
    props: { script: CollectionEntry<'scripts'> };
  }>
> {
  const scripts = await getCollection('scripts');
  return scripts.map((script: CollectionEntry<'scripts'>) => ({
    params: { slug: script.id },
    props: { script },
  }));
}

const { script } = Astro.props;
const { data } = script;
const { Content } = await script.render();

const basePath = import.meta.env.BASE_URL ?? '';
---

<BaseLayout
  title={`${data.titulo} - ${data.episodio}`}
  description={`Gui√≥n para ${data.plataforma}: ${data.titulo}. Duraci√≥n: ${data.duracion}.`}
>
  <!-- Breadcrumb Navigation -->
  <nav class="breadcrumb-nav" aria-label="Navegaci√≥n de migas de pan">
    <div class="container">
      <ol class="breadcrumb">
        <li><a href={`${basePath}/`}>Inicio</a></li>
        <li><a href={`${basePath}/guiones/`}>Guiones</a></li>
        <li aria-current="page">{data.episodio}</li>
      </ol>
    </div>
  </nav>

  <!-- Script Header -->
  <section class="script-header">
    <div class="container">
      <div class="header-content">
        <div class="episode-info">
          <div class="episode-badges">
            <span class="episode-number">{data.episodio}</span>
            <span
              class="platform-badge"
              style={`background-color: ${platformColors[data.plataforma] ?? '#6c757d'}`}
            >
              {data.plataforma}
            </span>
            <span
              class="status-badge"
              style={`background-color: ${statusColors[data.estado]?.bg ?? '#f8f9fa'}; color: ${statusColors[data.estado]?.text ?? '#6c757d'}`}
            >
              {data.estado}
            </span>
          </div>

          <h1 class="script-title text-gradient">{data.titulo}</h1>

          <div class="script-meta">
            <div class="meta-row">
              <span class="meta-item">
                <span class="emoji-cutout emoji-sm theme-solar">‚è±Ô∏è</span>
                Duraci√≥n: {data.duracion}
              </span>
              <span class="meta-item">
                <span class="emoji-cutout emoji-sm theme-green">üìç</span>
                {data.ubicacion.replace(/-/g, ' ')}
              </span>
              <span class="meta-item">
                <span class="emoji-cutout emoji-sm theme-purple">üìÖ</span>
                {new Date(data.fecha).toLocaleDateString('es-MX', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric',
                })}
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Characters Section -->
  <section class="script-characters">
    <div class="container">
      <h2>
        <span class="emoji-cutout emoji-md theme-community">üë•</span>
        Personajes
      </h2>
      <div class="characters-list">
        {
          data.personajes.map((personaje: string) => (
            <a
              href={`${basePath}/personajes/${personaje}/`}
              class="character-chip"
            >
              <span class="emoji-cutout emoji-sm">üë§</span>
              <span>
                {personaje
                  .split('-')
                  .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
                  .join(' ')}
              </span>
            </a>
          ))
        }
      </div>
    </div>
  </section>

  <!-- Themes Section -->
  <section class="script-themes">
    <div class="container">
      <h2>
        <span class="emoji-cutout emoji-md theme-purple">üè∑Ô∏è</span>
        Temas
      </h2>
      <div class="themes-list">
        {
          data.temas.map((tema: string) => (
            <span class="theme-tag">
              <span class="emoji-cutout emoji-sm theme-green">‚ú®</span>
              {tema.replace(/-/g, ' ')}
            </span>
          ))
        }
      </div>
    </div>
  </section>

  <!-- Platform Tip -->
  {
    data.plataforma === 'TikTok' ? (
      <section class="platform-tip tiktok-tip">
        <div class="container">
          <div class="tip-content">
            <span class="emoji-cutout emoji-lg theme-solar">üí°</span>
            <p>
              <strong>Tip TikTok:</strong> Grabado en vertical, optimizado para
              duraci√≥n de 30-60 segundos con hooks en los primeros 3 segundos.
            </p>
          </div>
        </div>
      </section>
    ) : data.plataforma === 'Instagram' ? (
      <section class="platform-tip instagram-tip">
        <div class="container">
          <div class="tip-content">
            <span class="emoji-cutout emoji-lg theme-purple">üí°</span>
            <p>
              <strong>Tip Instagram:</strong> Formato Reel vertical de 60-90
              segundos, con subt√≠tulos y m√∫sica trending.
            </p>
          </div>
        </div>
      </section>
    ) : null
  }

  <!-- Script Content -->
  <section class="script-content">
    <div class="container">
      <h2>
        <span class="emoji-cutout emoji-md theme-solar">üìù</span>
        Gui√≥n Completo
      </h2>
      <article class="script-body">
        <Content />
      </article>
    </div>
  </section>

  <!-- Navigation -->
  <section class="script-navigation">
    <div class="container">
      <div class="nav-buttons">
        <a href={`${basePath}/guiones/`} class="btn btn-secondary">
          <span class="emoji-cutout emoji-sm">üëà</span>
          Volver a Guiones
        </a>
        <a href={`${basePath}/contenido/sketches/`} class="btn btn-primary">
          <span class="emoji-cutout emoji-sm">üé¨</span>
          Ver Sketches
        </a>
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  .breadcrumb-nav {
    background-color: var(--fondo-secundario);
    padding: var(--espacio-md) 0;
    border-bottom: 1px solid var(--borde-claro);
  }

  .breadcrumb {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;
    font-size: 0.875rem;
  }

  .breadcrumb li {
    color: var(--texto-secundario);
  }

  .breadcrumb li:not(:last-child)::after {
    content: ' / ';
    margin: 0 var(--espacio-sm);
    color: var(--texto-terciario);
  }

  .breadcrumb a {
    color: var(--azul-tecnologico);
    text-decoration: none;
  }

  .breadcrumb a:hover {
    text-decoration: underline;
  }

  .script-header {
    padding: var(--espacio-xxl) 0;
    background: linear-gradient(
      135deg,
      var(--fondo-primario) 0%,
      var(--fondo-secundario) 100%
    );
  }

  .episode-badges {
    display: flex;
    gap: var(--espacio-md);
    margin-bottom: var(--espacio-lg);
  }

  .episode-number {
    padding: var(--espacio-xs) var(--espacio-md);
    background: var(--fondo-secundario);
    border: 2px solid var(--borde-claro);
    border-radius: 20px;
    font-weight: 600;
    font-size: 0.875rem;
  }

  .platform-badge {
    padding: var(--espacio-xs) var(--espacio-md);
    color: white;
    border-radius: 20px;
    font-weight: 600;
    font-size: 0.875rem;
  }

  .status-badge {
    padding: var(--espacio-xs) var(--espacio-md);
    border-radius: 20px;
    font-weight: 600;
    font-size: 0.875rem;
  }

  .script-title {
    font-size: 3rem;
    margin-bottom: var(--espacio-lg);
  }

  .script-meta {
    color: var(--texto-secundario);
  }

  .meta-row {
    display: flex;
    flex-wrap: wrap;
    gap: var(--espacio-xl);
  }

  .meta-item {
    display: flex;
    align-items: center;
    gap: var(--espacio-sm);
  }

  .script-characters,
  .script-themes {
    padding: var(--espacio-xl) 0;
    background-color: var(--fondo-secundario);
  }

  .script-characters h2,
  .script-themes h2 {
    display: flex;
    align-items: center;
    gap: var(--espacio-md);
    margin-bottom: var(--espacio-lg);
    color: var(--amarillo-solar);
  }

  .characters-list {
    display: flex;
    flex-wrap: wrap;
    gap: var(--espacio-md);
  }

  .character-chip {
    display: flex;
    align-items: center;
    gap: var(--espacio-sm);
    padding: var(--espacio-sm) var(--espacio-md);
    background: var(--fondo-primario);
    border: 2px solid var(--borde-claro);
    border-radius: 25px;
    text-decoration: none;
    color: var(--texto-primario);
    font-weight: 500;
    transition: all var(--transicion-rapida);
  }

  .character-chip:hover {
    border-color: var(--naranja-comunidad);
    background: rgba(255, 111, 53, 0.1);
    transform: translateY(-2px);
  }

  .themes-list {
    display: flex;
    flex-wrap: wrap;
    gap: var(--espacio-md);
  }

  .theme-tag {
    display: flex;
    align-items: center;
    gap: var(--espacio-sm);
    padding: var(--espacio-sm) var(--espacio-md);
    background: rgba(76, 175, 80, 0.1);
    color: var(--verde-sostenible);
    border-radius: 20px;
    font-weight: 500;
  }

  .platform-tip {
    padding: var(--espacio-lg) 0;
    margin: var(--espacio-xl) 0;
  }

  .tip-content {
    display: flex;
    align-items: center;
    gap: var(--espacio-lg);
    padding: var(--espacio-lg);
    border-radius: 12px;
    border: 2px dashed;
  }

  .tiktok-tip .tip-content {
    background: rgba(255, 0, 80, 0.05);
    border-color: #ff0050;
  }

  .instagram-tip .tip-content {
    background: rgba(228, 64, 95, 0.05);
    border-color: #e4405f;
  }

  .script-content {
    padding: var(--espacio-xxl) 0;
  }

  .script-content h2 {
    display: flex;
    align-items: center;
    gap: var(--espacio-md);
    margin-bottom: var(--espacio-lg);
    color: var(--amarillo-solar);
  }

  .script-body {
    background: var(--fondo-secundario);
    padding: var(--espacio-xl);
    border-radius: 12px;
    border: 1px solid var(--borde-claro);
    box-shadow: 0 4px 6px var(--sombra-suave);
  }

  /* Style the content from markdown */
  .script-body :global(h2) {
    color: var(--verde-sostenible);
    margin-top: var(--espacio-xl);
    margin-bottom: var(--espacio-md);
  }

  .script-body :global(h3) {
    color: var(--purpura-creativo);
    margin-top: var(--espacio-lg);
    margin-bottom: var(--espacio-sm);
  }

  .script-body :global(p) {
    line-height: 1.8;
    margin-bottom: var(--espacio-md);
  }

  .script-body :global(em) {
    font-style: italic;
    color: var(--texto-secundario);
  }

  .script-body :global(strong) {
    font-weight: 600;
    color: var(--texto-primario);
  }

  .script-body :global(ul),
  .script-body :global(ol) {
    margin-bottom: var(--espacio-md);
    padding-left: var(--espacio-xl);
  }

  .script-body :global(li) {
    margin-bottom: var(--espacio-sm);
    line-height: 1.6;
  }

  .script-navigation {
    padding: var(--espacio-xxl) 0;
  }

  .nav-buttons {
    display: flex;
    justify-content: space-between;
    gap: var(--espacio-lg);
  }

  /* Mobile Responsiveness */
  @media (max-width: 768px) {
    .script-title {
      font-size: 2rem;
    }

    .meta-row {
      flex-direction: column;
      gap: var(--espacio-md);
    }

    .nav-buttons {
      flex-direction: column;
      align-items: center;
    }

    .nav-buttons .btn {
      width: 100%;
      max-width: 300px;
    }
  }

  @media (max-width: 480px) {
    .episode-badges {
      flex-wrap: wrap;
    }

    .script-title {
      font-size: 1.75rem;
    }

    .tip-content {
      flex-direction: column;
      text-align: center;
    }
  }
</style>